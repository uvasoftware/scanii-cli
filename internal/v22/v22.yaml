openapi: 3.0.3
info:
  title: Scanii Content Identification API
  version: 2.2.0
  contact:
    name: Uva Software LLC (Scanii)
    url: https://www.scanii.com
    email: support@uvasoftware.com
  license:
    name: Apache-2.0
    url: https://github.com/uvasoftware/openapi/blob/main/LICENSE
  description: |
    API for the [scanii.com](https://scanii.com) content identification service.

    Please note that to use this API you must first signup for scanii.com and create an API key. You can create an API 
    in seconds by creating an account at [scanii.com](https://www.scanii.com). Documentation can be found in our documentation
    site: [https://docs.scanii.com](https://docs.scanii.com)
    
    Need help? Just email support@uvasoftware.com

    Notable changes from previous version:
      * Addition of a location argument to synchronous calls in our Files resources
    
    Implementation notes:
    * Please note that the way we handle metadata is by using a special prefix in the form of `metadata[foo]=bar` where `foo` is the key and `bar` is the value.
    This doesn't map well to most openapi generators so some manual adjusting of the generated code might be required. We plan on addressing this in a future release.

servers:
  - url: https://api-us1.scanii.com/v2.2
    description: Virginia/USA processing region
  - url: https://api-eu1.scanii.com/v2.2
    description: Dublin/Ireland processing region
  - url: https://api-eu2.scanii.com/v2.2
    description: London/United Kingdom processing region
  - url: https://api-ap1.scanii.com/v2.2
    description: Sydney/Australia processing region
  - url: https://api-ap2.scanii.com/v2.2
    description: Singapore/Singapore processing region
tags:
  - name: Files
    description: Operations related to file analysis.
  - name: General
    description: Operations related to account management and credentials validation
  - name: Authentication Token
    description: Authentication tokens are to be used in situations in which you want to grant temporary access to Scanii's API to third party or untrusted sources. The canonical example being allowing API calls to happen from a untrusted web browser on your behalf in a secure fashion. Instead of shipping your real API keys to the client's browser, you generate a time bound authentication token.
components:
  responses:
    401:
      description: Bad credentials, the API key/secret combination is either invalid or unusable
      headers:
        X-Scanii-Request-Id:
          $ref: '#/components/headers/X-Scanii-Request-Id'
        X-Scanii-Host-Id:
          $ref: '#/components/headers/X-Scanii-Host-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  headers:
    X-Scanii-Host-Id:
      description: >-
        Unique identifier of the server that processed the request. This is useful for debugging purposes.
      schema:
        type: string
      required: true
    X-Scanii-Request-Id:
      description: >-
        Unique identifier of the request. This is useful for debugging purposes.
      schema:
        type: string
      required: true
    Location:
      schema:
        type: string
      description: URL to retrieve the processing result

  schemas:
    User:
      type: object
      properties:
        creation_date:
          type: string
          format: iso8601
        last_login:
          type: string
          format: iso8601
    ApiKey:
      type: object
      properties:
        active:
          type: boolean
        detection_categories_enabled:
          type: array
          items:
            type: string
        last_seen_date:
          type: string
          format: iso8601
        creation_date:
          type: string
          format: iso8601
        tags:
          type: array
          items:
            type: string
    ErrorResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        error:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: string
    ProcessingPendingResponse:
      type: object
      description: Entity representation of a pending content analysis
      properties:
        id:
          description: This result unique identifier, should be used to retried the result of the analysis
          type: string
    ProcessingResponse:
      type: object
      description: |
        Entity representation the result of a file analysis. Please note that this entity is only returned for
        synchronous requests. For asynchronous requests please refer to the [Files](#tag/Files) resource.
      properties:
        id:
          description: This result unique identifier, should be used to retried the result of the analysis
          type: string
        checksum:
          type: string
          nullable: true
          description: The SHA1 digest of the content processed
        content_length:
          type: number
          nullable: true
          description: The length in bytes of the content processed
        findings:
          type: array
          nullable: true
          items:
            type: string
          description: |
            These are the labels/findings identified by our detection engines using a dot notation for hierarchies, for 
            example: content.malicious.foo or content.malicious.bar. Please note that the actual findings will vary based
            on the content type and the detection engines enabled for your API key.
            As of this API version common content hierarchies include: 
            
            * content.malicious.{{name}} - malicious content like malware and spam 
            * content.images.nsfw.{{name}} - unsafe image 
            * content.{{ISO_3166-1_alpha-2 country code}}.language.nsfw - unsafe language
            
            A empty findings array means that no findings were identified for the content processed and it should be considered *safe*. 

        creation_date:
          nullable: true
          type: string
          format: iso8601
          description: ISO8601 time stamp of when the content was processed
        content_type:
          type: string
          nullable: true
          description: The media type of the content processed
        metadata:
          type: object
          nullable: true
          additionalProperties:
            type: string
        error:
          type: string
          nullable: true
          description: |
            If an error occurred during processing this field will contain the error message. Please note that this field is only
            present if an error occurred during processing.
    AuthToken:
      type: object
      properties:
        id:
          type: string
        creation_date:
          type: string
        expiration_date:
          type: string
    AccountInfo:
      type: object
      properties:
        name:
          type: string
        balance:
          type: number
        starting_balance:
          type: number
        billing_email:
          type: string
        subscription:
          type: string
        creation_date:
          type: string
          format: iso8601
        modification_date:
          type: string
          format: iso8601
        users:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/User'
        keys:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ApiKey'
  securitySchemes:
    token:
      type: http
      scheme: basic
      description: Our service uses basic authentication (over TLS) for authentication. You can use any API key as the username and the API key secret as the password.
security:
  - token: [ ]
paths:
  /ping:
    get:
      summary: Test endpoint
      description: Test resource suitable for API credential validation
      operationId: ping
      tags:
        - General
      responses:
        '200': # status code
          description: Validates that API credentials are working
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  key:
                    type: string
                    description: Returns the public key used
        '401':
          $ref: '#/components/responses/401'
  /account.json:
    get:
      summary: Retrieves account related information
      description: Retrieves account related information
      operationId: account
      tags:
        - General
      responses:
        '200': # status code
          description: Returns account related information
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfo'
        '401':
          $ref: '#/components/responses/401'
  /files/{id}:
    get:
      summary: Retrieves a previously created processing result
      description: Retrieves a previously created processing result
      operationId: retrieveFile
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Processing id
      tags:
        - Files
      responses:
        '200': # status code
          description: Retrieves a processing result
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingResponse'
        '401':
          $ref: '#/components/responses/401'
  /files:
    post:
      summary: Submits content for processing
      description: >-
        Submits content for processing either by posting the file content directly or passing in a URL to fetch.
        Please note that: location and file parameters are mutually exclusive.
      operationId: processFile
      tags:
        - Files
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              additionalProperties: false
              type: object
              properties:
                file:
                  description: File to analyze
                  type: string
                  format: binary
                location:
                  description: URL to fetch and analyze
                  type: string
                metadata:
                  type: object
                  additionalProperties:
                    type: string
              required:
                - file
                - location
      responses:
        '201':
          description: Analyzes content and returns a processing result
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingResponse'
        '400':
          description: Bad request
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          description: Your API keys cannot be used
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '413':
          description: Content submitted for processing is too large
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /files/async:
    post:
      summary: Submits content for processing asynchronously
      description: >-
        The purpose of this endpoint is to allow content to be submitted for processing without blocking the callee. 
        This also implies the callee must lookup the result using our lookup endpoint, or wire in a callback webhook.
      operationId: processFileAsync
      tags:
        - Files
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: File to analyze
                  type: string
                  format: binary
                callback:
                  description: Callback URL to notify once processing is completed
                  type: string
                metadata:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '202':
          description: Accepted for processing
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingPendingResponse'
        '400':
          description: Bad request
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/401'
  /files/fetch:
    post:
      summary: Submits a URL for processing asynchronously
      description: >-
        Companion to our async endpoint, this allows for synchronous processing of content stored in a remote HTTP location.
      operationId: processFileFetch
      tags:
        - Files
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                location:
                  description: URL to fetch and analyze
                  type: string
                callback:
                  description: Callback URL to notify once processing is completed
                  type: string
              additionalProperties:
                type: string
                format: metadata[foo]=bar
      responses:
        '202':
          description: Accepted for processing
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingPendingResponse'
        '400':
          description: Bad request
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/401'
  /auth/tokens/{id}:
    description: >-
      Authentication tokens are to be used in situations in which you want to grant temporary access to Scanii's API to third party or untrusted sources. The canonical example being allowing API calls to happen from a untrusted web browser on your behalf in a secure fashion. Instead of shipping your real API keys to the client's browser, you generate a time bound authentication token. 

      Authentication tokens have limits: 

      1. They cannot be used to generate other authentication tokens
      2. They cannot be used to access administrative resources
    get:
      summary: Retrieves a previously created temporary authentication token
      operationId: retrieveToken
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Auth token id
      tags:
        - Authentication Token
      responses:
        '200': # status code
          description: Retrieves a previously created token
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        '401':
          $ref: '#/components/responses/401'
    delete:
      summary: Deletes a previously created temporary authentication token
      operationId: deleteToken
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Processing id
      tags:
        - Authentication Token
      responses:
        '204': # status code
          description: Token successfully deleted
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
        '401':
          $ref: '#/components/responses/401'
  /auth/tokens:
    post:
      summary: Creates a temporary authentication token
      operationId: createToken
      tags:
        - Authentication Token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                timeout:
                  description: Number of seconds this token should be valid for
                  type: "integer"
                  format: "int64"
                  default: "300"
      responses:
        '200': # status code
          description: Retrieves a processing result
          headers:
            X-Scanii-Request-Id:
              $ref: '#/components/headers/X-Scanii-Request-Id'
            X-Scanii-Host-Id:
              $ref: '#/components/headers/X-Scanii-Host-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'

        '401':
          $ref: '#/components/responses/401'
